{
	"info": {
		"_postman_id": "36c47e5e-7458-4752-b907-77bc8bd543b7",
		"name": "ContactBook_Api_Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17589417"
	},
	"item": [
		{
			"name": "GET",
			"item": [
				{
					"name": "Get_All_Contacts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check if response is json\", function () {\r",
									"    pm.response.to.be.json;\r",
									"    const responseBody = pm.response.json();\r",
									"    pm.expect(typeof(responseBody), \"Type of response body\").to.eql(\"object\");\r",
									"    \r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-type\")).to.be.eql(\"application/json; charset=utf-8\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/contacts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find_contact_by_keyword",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check contact last name\", function () {\r",
									"    const responseBody = pm.response.json();\r",
									"\r",
									"    for(let i = 0; i < responseBody.length; i++){\r",
									"        pm.expect(responseBody[i].firstName, \"Last name property\").to.be.eql(\"Michael\");\r",
									"        pm.expect(responseBody[i].lastName, \"Last name property\").to.be.eql(\"Jackson\");\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/contacts/search/Michael",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"contacts",
								"search",
								"Michael"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "POST",
			"item": [
				{
					"name": "Create_contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request status code 201 or 202\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has string Created\", function () {\r",
									"  pm.response.to.have.status(\"Created\");\r",
									"});\r",
									"\r",
									"const respBody = pm.response.json();\r",
									"\r",
									"pm.environment.set(\"contactId\", respBody.contact.id);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\":\"Marie\",\r\n     \"lastName\":\"Curie\", \r\n     \"email\":\"marie67@gmail.com\",\r\n      \"phone\":\"+1 800 200 300\", \r\n      \"comments\":\"Old friend\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/contacts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"contacts"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PATCH",
			"item": [
				{
					"name": "Try_To_Edit_contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Assert that status error code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"Emmy\",\r\n    \"lastName\": \"Jones\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/contacts/{{contactId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"contacts",
								"{{contactId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DELETE",
			"item": [
				{
					"name": "Delete_existing_contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Assert that contact was deleted\", function () {\r",
									"    const resBody = pm.response.json();\r",
									"    \r",
									"    pm.expect(resBody.msg, \"MSG Property\").to.be.equal(\"Contact deleted: \" + pm.environment.get(\"contactId\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/contacts/{{contactId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"contacts",
								"{{contactId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}